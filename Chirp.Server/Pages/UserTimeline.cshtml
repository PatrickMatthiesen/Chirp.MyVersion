@page "/{author}"
@inject ICheepRepository CheepRepository
@inject IAuthorRepository AuthorRepository
@inject UserManager<Author> UserManager

@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";

    var authorName = RouteData.Values["author"]?.ToString();

    var hasPage = int.TryParse(Request.Query["page"], out var page);
    page = Math.Max(hasPage ? page : 1, 1);

    var hasSize = int.TryParse(Request.Query["size"], out var size);
    size = Math.Max(hasSize ? size : 32, 32);

    List<CheepDTO> cheeps;
    List<FollowerDTO> followers = null;
    if (User.Identity.IsAuthenticated && authorName == User.Identity.Name)
    {
        var user = await UserManager.GetUserAsync(User);
        followers = await AuthorRepository.GetFollowers(user.Id);
        cheeps = await AuthorRepository.GetMyTimeline(user.Id, page, size);
    } else
    {
        cheeps = await CheepRepository.GetCheepsByAuthor(authorName, page, size);
    }


    var displayName = cheeps.FirstOrDefault()?.DisplayName ?? authorName;

    @functions {
        [BindProperty]
        public string? Text { get; set; }

        public async Task OnPostSendCheep() {
            var user = await UserManager.GetUserAsync(User);
            var cheep = new CheepCreateDTO
            {
                Message = Text,
                AuthorId = user.Id
            };
            await CheepRepository.CreateCheep(cheep);
        }

        public async Task OnPostFollow(string userToFollow) {
            var user = await UserManager.GetUserAsync(User);
            await AuthorRepository.FollowUser(user.Id, userToFollow);

        }

        public async Task OnPostUnFollow(string userToUnFollow) {
            var user = await UserManager.GetUserAsync(User);
            await AuthorRepository.UnfollowUser(user.Id, userToUnFollow);
        }
    }
}

<div>
    <h2> @displayName's Timeline </h2>

    @if (User.Identity!.IsAuthenticated && authorName == User.Identity.Name)
    {
        <form method="post" asp-page-handler="SendCheep">
            <input type="text" name="text" placeholder="What do you want to cheep" />
            <input type="submit" value="Cheep" />
        </form>
    }

    @if (cheeps.Count > 0)
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in cheeps)
            {
                <li>
                    @if (cheep.GithubId is not null)
                    {
                        <img style="width:48px; height:48px" src="https://avatars.githubusercontent.com/u/@cheep.GithubId?v=4&size=48">
                    }
                    else
                    {
                        string name = cheep.AuthorName.Replace("@", string.Empty).Replace(".", string.Empty).ToLowerInvariant();
                        <img style="width:48px; height:48px" src="https://www.gravatar.com/avatar/@(name).jpg?d=identicon&s=48">
                    }
                    <div style="display: flex; gap: 0.3rem;">
                        <strong>
                            <a href="/@cheep.AuthorName">@cheep.DisplayName</a>
                        </strong>
                        <small>&mdash; @cheep.TimeStamp.ToLocalTime().ToString("dd MMM hh:mm:ss")</small>
                        @if (User.Identity!.IsAuthenticated
                        && cheep.AuthorName != User.Identity.Name
                        && followers is not null)
                        {
                            <form method="post">
                                @if (followers is not null && followers.Any(f => f.UserName == cheep.AuthorName))
                                {
                                    <button class="btn-follow" type="submit" asp-page-handler="UnFollow" asp-route-userToUnFollow="@cheep.AuthorName">UnFollow</button>
                                }
                                else
                                {
                                    <button class="btn-follow" type="submit" asp-page-handler="Follow" asp-route-userToFollow="@cheep.AuthorName">Follow</button>
                                }
                            </form>
                        }
                    </div>
                    <p>
                        @cheep.Message
                    </p>
                </li>
            }
        </ul>
    }
    else
    {
        <em>There are no cheeps so far.</em>
    }
</div>
